{
  "hash": "a1be42e952b89808bcf0ff4697c79002",
  "result": {
    "markdown": "# Compare CO\n\n## CO Distribution\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\nchr_level_CO_table <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/final_filtered_table.rds\")\n\nchr_level_CO_table_new <- chr_level_CO_table %>% dplyr::mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\nfwrite(chr_level_CO_table_new, \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/all_co_events.csv\")\n\n#### Visulization of the crossover events ####\n\n# Make a GRanges with your data (we need to repeat column 2 as start and end for this to work)\nchr_level_CO_table_new_gr_df_AS <- chr_level_CO_table_new %>% dplyr::select(chr, start, end, Type) %>% dplyr::mutate(chr = paste0(\"chr\", chr)) %>% dplyr::filter(Type == \"AS\")\n\nchr_level_CO_table_new_gr_df_NF <- chr_level_CO_table_new %>% dplyr::select(chr, start, end, Type) %>% dplyr::mutate(chr = paste0(\"chr\", chr)) %>% dplyr::filter(Type == \"NF\")\n\n# Make the crosssover genomic range variable  \nco.gr_AS <- regioneR::toGRanges(chr_level_CO_table_new_gr_df_AS[, c(\"chr\",\"start\", \"end\")])\nco.gr_NF <- regioneR::toGRanges(chr_level_CO_table_new_gr_df_NF[, c(\"chr\",\"start\", \"end\")])\n\npdf(file = \"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/CO_Genome_Distribution_AS_NF_10_05_2023.pdf\",   # The directory you want to save the file in\n    width = 8, # The width of the plot in inches\n    height = 11) # The height of the plot in inches\n\nkp <- plotKaryotype(\"hg38\", plot.type=2, labels.plotter = NULL, ideogram.plotter\t= NULL, main=\"\", cex=0.2, chromosomes = c(paste0(\"chr\", c(1:22))))\n\n# Plot the ideogram as a line\nkpAddCytobandsAsLine(kp)\n  \nkpAddChromosomeNames(kp, srt=45, cex=0.5)\n\nkp <- kpPlotDensity(kp, data=co.gr_AS, data.panel = 1, window.size = 500000, border=\"black\", col = \"coral\")\nkpAxis(kp, ymax=kp$latest.plot$computed.values$max.density, data.panel = 1, cex=0.5, side = 1)\n\n# Note the density of AS group crossovers in the windows\nAS_CO_density <- kp$latest.plot$computed.values$density\nAS_CO_windows <- as.data.frame(kp$latest.plot$computed.values$windows)\n\nAS_CO_density <- cbind(AS_CO_windows, AS_CO_density)\n\n# kpAbline(kp, h=0, lty=1, ymax=kp$latest.plot$computed.values$max.density, data.panel = 1, col=\"black\", lwd = 0.2)\n\nkp <- kpPlotDensity(kp, data=co.gr_NF, data.panel = 2, window.size = 500000, border=\"black\", col = \"cornflowerblue\")\nkpAxis(kp, ymax=kp$latest.plot$computed.values$max.density, data.panel = 2, cex=0.5, side = 2)\n\n# Note the density of AS group crossovers in the windows\nNF_CO_density <- kp$latest.plot$computed.values$density\nNF_CO_windows <- as.data.frame(kp$latest.plot$computed.values$windows)\n\nNF_CO_density <- cbind(NF_CO_windows, NF_CO_density)\n\n# kpAbline(kp, h=0, lty=1, ymax=kp$latest.plot$computed.values$max.density, r0=0.6, r1=1, col=\"black\", lwd = 2)\nlegend(x = \"bottom\", fill = c(\"coral\", \"cornflowerblue\"), legend = c(\"AS\", \"NF\"), box.lwd = 4)\n\ndev.off()\n```\n:::\n\n\n### Check the hotspot density\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\nlibrary(biomaRt)\nlibrary(tidyverse)\ntxdb <- TxDb.Hsapiens.UCSC.hg38.knownGene\n\n# Combine the AS density and NF density \nAS_NF_CO_density <- left_join(AS_CO_density, NF_CO_density)\n\nAS_NF_CO_density <- AS_NF_CO_density %>% dplyr::select(seqnames, start, end, AS_CO_density, NF_CO_density)\n\nfwrite(AS_NF_CO_density, \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/AS_NF_Co_density.csv\")\n\nwrite.table(AS_NF_CO_density[, c(1:3)], \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/AS_NF_Co_density_windows_info.bed\", sep = \"\\t\", col.names = FALSE, quote = FALSE, row.names = FALSE)\n\n# Extract the high CO region\n\nhigh_CO_density <- AS_NF_CO_density %>% dplyr::filter(AS_CO_density >= 2, NF_CO_density >= 2)\n\ncolnames(high_CO_density)[1] <- \"chr\"\n\nhigh_CO_density$chr <- gsub(\"chr\", \"\", high_CO_density$chr)\n\n# specify the database\nensembl = useMart(\"ensembl\", dataset = \"hsapiens_gene_ensembl\")\n\n# queries per row\nres <- high_CO_density %>% \n  split(1:nrow(.)) %>% \n  map(~getBM(attributes=c(\"external_gene_name\", \"chromosome_name\", \"start_position\", \"end_position\"), \n             filters = c(\"chromosome_name\" , \"start\", \"end\"), \n             values = list(.$chr, .$start, .$end), \n             mart = ensembl))\n# Function to merge a specific column, ignoring empty values\nmerge_column_ignore_empty <- function(df, column_name) {\n    merged_vector <- paste(df[[column_name]][df[[column_name]] != \"\"], collapse = \",\")\n    return(merged_vector)\n}\n\n# Apply the function to all data frames in the list\nmerged_vectors_list <- lapply(res, merge_column_ignore_empty, column_name = \"external_gene_name\")\n\n# Bind the merged vectors as a single column\nresulting_dataframe <- do.call(rbind, merged_vectors_list)\n\ncolnames(resulting_dataframe) <- \"genes\"\n\nhigh_CO_density <- cbind(high_CO_density, resulting_dataframe)\n\n# Output the high CO density bed file \n\nwrite.table(high_CO_density[, c(1:3)], \n            \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/high_crossover_density.bed\", \n            sep = \"\\t\", col.names = FALSE, quote = FALSE, row.names = FALSE)\n\ngenes_in_the_windows <- as.vector(high_CO_density$genes)\n```\n:::\n\n\n## CO Frequency\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\n## Load the sperm sample name list\nsperm_list_df <- fread(\"D:/sperm_project/sperm_vcf_file/sperm_sampleList/sperm_sample_nameList.tsv\", header = F) %>% as.data.frame()\n\n## Remove the aneuploidy sperms\n\naneuploid_sperms <- c(\"AS24s5\", \"AS30s3\", \"AS30s4\", \"AS32s4\", \"AS35s1\", \"AS41s4\", \"NF23-1s5\", \"NF25-1s1\", \"NF31-2s5\", \"N30-2s3\", \"N27-3s3\")\n\nsperm_list_df <- sperm_list_df %>% filter(!V1 %in% aneuploid_sperms)\n\n## Unify the sperm name in normal samples\ncolnames(sperm_list_df) <- \"sperm_id\"\n\nsperm_list_df$sperm_id <- gsub(\"N\", \"NF\", sperm_list_df$sperm_id)\nsperm_list_df$sperm_id <- gsub(\"NFF\", \"NF\", sperm_list_df$sperm_id)\n\nsperm_chromosome_level_CO_freq <- data.frame(sperm_id = rep(sperm_list_df[,1], each = 22),\n                                             chr = rep(c(1:22), times = length(sperm_list_df[,1])))\n\nsperm_chromosome_level_CO_freq$Individual <- gsub(\"s\\\\d$\", \"\", sperm_chromosome_level_CO_freq$sperm_id)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  summarise(chromosome_CO_count = n(),.groups = 'drop') %>%\n  as.data.frame()\n\nView(chr_level_CO_table_number_table)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  summarise(chromosome_CO_count = n(),.groups = 'drop') %>%\n  as.data.frame()\n\nchr_level_CO_table_number_table$chr <- as.integer(chr_level_CO_table_number_table$chr)\n\n## Left join\n\neach_sperm_chromosome_level_CO_freq <- left_join(sperm_chromosome_level_CO_freq, chr_level_CO_table_number_table)\n\n## Delete the aneuploidy\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% mutate(chromosome_CO_count = ifelse(is.na(chromosome_CO_count), 0, chromosome_CO_count)) %>% \n  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\n\n\n## Ttest on chromosome number\nAS_group_count <- each_sperm_chromosome_level_CO_freq[each_sperm_chromosome_level_CO_freq$Type==\"AS\", \"chromosome_CO_count\"]\nAS_group_count[is.na(AS_group_count)] <- 0\n\nNF_group_count <- each_sperm_chromosome_level_CO_freq[each_sperm_chromosome_level_CO_freq$Type==\"NF\", \"chromosome_CO_count\"]\nNF_group_count[is.na(NF_group_count)] <- 0\n\nt.test(AS_group_count, NF_group_count)\n\n\n\nggplot(each_sperm_chromosome_level_CO_freq, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 1, width = 0.3, height = 0.5) + \n  scale_color_manual(values=c(\"coral\", \"cornflowerblue\"))+\n  facet_wrap( . ~ chr) + ylim(c(0,15))\n\nggplot(each_sperm_chromosome_level_CO_freq, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 1, width = 0.3, height = 0.4) + \n  scale_color_manual(values=c(\"coral\", \"cornflowerblue\"))+\n  ylim(c(0,10))\n  \n  \n## Make the table about Sperm level average crossover\n\nsperm_level_ave_chr_CO_freq <- each_sperm_chromosome_level_CO_freq %>% \n  group_by(sperm_id) %>% \n  summarise(Sperm_ave_all_chr_level_CO = mean(chromosome_CO_count, na.rm=TRUE)) %>%  as.data.frame() %>%\n  mutate(Type = ifelse(grepl(\"AS\", sperm_id ), \"AS\", \"NF\")) %>% as.data.frame()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}