{
  "hash": "70ed390b061874472c78d2bdcd3a37b2",
  "result": {
    "engine": "knitr",
    "markdown": "# Compare CO\n\nBased on the crossover detected from the sperm genome. We can compare two groups abd check if there exist frequency difference between two groups. \n\n## Figure 2A\n\nThe crossovers detected on 2,046 chromosomes (22 autosomes × 93 sperm cells) in the NF group and on 1,144 chromosomes (22 autosomes × 52 sperm cells) in the AS group. \n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\neach_sperm_each_chr_CO_table <- readRDS(\"dataset/CO_table/each_sperm_each_chr_CO_table.rds\")\n\n# Create the plot with larger text size and other customizations\nggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count)) + \n    geom_violin(trim=FALSE) +\n  geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +\n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  ylim(c(0,10)) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values\n  labs(x = \"\", y = \"Count\") +  # Update axis labels\n  theme_minimal() +  # Use a minimal theme for cleaner appearance\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.2),\n    text = element_text(size = 12, color = \"black\"),\n        legend.position=\"none\",\n        axis.text.x = element_text(color = \"black\"),  # X-axis text color\n        axis.text.y = element_text(color = \"black\"),\n        panel.border = element_rect(\n          color = \"black\",  # Border color\n          size = 1,         # Border size (adjust as needed)\n          fill = NA         # No fill inside the border\n          )) + stat_compare_means(method = \"wilcox.test\", paired = FALSE, \n                                  label.y = 7, \n                                  label.x = 1.5,\n                                  aes(label = paste0(\"Pvalue = \", after_stat(p.format))))\n  \n  ggsave(paste0(\"Figures/CO_stats/sperm_CO_all_chr.pdf\"), width = 4, height = 4)  \n```\n:::\n\n\n![Figure 2A](Figures/CO_stats/sperm_CO_all_chr.pdf){width=100%, height=400}\n\n## sperms on each chromosome (Figure 2B)\n\nThe average number of crossovers per chromosome was assessed in each of the 93 sperm cells from the NF group and compared to those in each of the 52 sperm cells from the AS group.\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\ninput_data$chr <- paste0(\"chr\", input_data$chr)\ninput_data$chr <- factor(input_data$chr, levels = paste0(\"chr\", c(1:22)))\n\nggplot(input_data, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) + \n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1), limits = c(0, 6)) +  # Set custom y-axis tick values and limits\n  theme_minimal() +\n  facet_wrap(~ chr, nrow = 2) +\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.5),  # Adjust the color and size of horizontal gridlines\n    panel.border = element_rect(\n      color = \"black\",\n      size = 0.5,\n      fill = NA\n    ),\n    text = element_text(size = 12, color = \"black\"),\n    legend.position=\"none\",\n    axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n    axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    strip.text.x = element_text(\n      size = 12, color = \"black\", face = \"bold\"\n      ),\n    strip.text.y = element_text(\n      size = 12, color = \"black\", face = \"bold\"\n      )) + \n  labs(y = \"Count\", x = \"\") + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 5.5,\n                         aes(label = paste0(\"P = \", after_stat(p.format))), size = 3)\n\nggsave(paste0(\"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/sperm_CO_each_chr.pdf\"), width = 8, height = 4) \n## CO Distribution (Figure 3)\n```\n:::\n\nFirst, we can check the crossover distribution of two groups.\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\nchr_level_CO_table <- readRDS(\"dataset/CO_table/final_filtered_table.rds\")\n\nchr_level_CO_table_new <- chr_level_CO_table %>% dplyr::mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\n# Write the table of the all CO events\nfwrite(chr_level_CO_table_new, \"tables/all_co_events.csv\")\n\n#### Visulization of the crossover events ####\n\n# Make a GRanges with data (we need to repeat column 2 as start and end for this to work)\nchr_level_CO_table_new_gr_df_AS <- chr_level_CO_table_new %>% dplyr::select(chr, start, end, Type) %>% dplyr::mutate(chr = paste0(\"chr\", chr)) %>% dplyr::filter(Type == \"AS\")\n\nchr_level_CO_table_new_gr_df_NF <- chr_level_CO_table_new %>% dplyr::select(chr, start, end, Type) %>% dplyr::mutate(chr = paste0(\"chr\", chr)) %>% dplyr::filter(Type == \"NF\")\n\n# Make the crosssover genomic range variable  \n\nco.gr_AS <- regioneR::toGRanges(chr_level_CO_table_new_gr_df_AS[, c(\"chr\",\"start\", \"end\")])\nco.gr_NF <- regioneR::toGRanges(chr_level_CO_table_new_gr_df_NF[, c(\"chr\",\"start\", \"end\")])\n\n## To calculate the density of the crossover, we calculate the co frequency in bin size  = 500000\npdf(file = \"Figures/CO_stats/CO_Genome_Distribution_Total_AS_NF.pdf\", \n    width = 8,\n    height = 11) \n\nkp <- plotKaryotype(\"hg38\", plot.type=2, labels.plotter = NULL, ideogram.plotter\t= NULL, main=\"\", cex=0.2, chromosomes = c(paste0(\"chr\", c(1:22))))\n\n# Plot the ideogram as a line\nkpAddCytobandsAsLine(kp)\n  \nkpAddChromosomeNames(kp, srt=45, cex=0.5)\n\nkp <- kpPlotDensity(kp, data=co.gr_AS, data.panel = 1, window.size = 500000, border=\"black\", col = \"coral\")\nkpAxis(kp, ymax = kp$latest.plot$computed.values$max.density, data.panel = 1, cex=0.5, side = 1)\n\n# Define the density of AS group crossovers in the windows\nAS_CO_density <- kp$latest.plot$computed.values$density\nAS_CO_windows <- as.data.frame(kp$latest.plot$computed.values$windows)\n\n## Define the AS donor average of crossover per window\nAS_donor_average_density <- AS_CO_density/52\n\n## Define the AS crossover density dataframe\nAS_CO_density <- cbind(AS_CO_windows, AS_CO_density, AS_donor_average_density)\n\n\n# kpAbline(kp, h=0, lty=1, ymax=kp$latest.plot$computed.values$max.density, data.panel = 1, col=\"black\", lwd = 0.2)\n\nkp <- kpPlotDensity(kp, data=co.gr_NF, data.panel = 2, window.size = 500000, border=\"black\", col = \"cornflowerblue\")\nkpAxis(kp, ymax=kp$latest.plot$computed.values$max.density, data.panel = 2, cex=0.5, side = 2)\n\n# Save the density of AS group crossovers in the windows\nNF_CO_density <- kp$latest.plot$computed.values$density\nNF_CO_windows <- as.data.frame(kp$latest.plot$computed.values$windows)\n\n## Define the NF donor average of crossover per window\nNF_donor_average_density <- NF_CO_density/93\n\nNF_CO_density <- cbind(NF_CO_windows, NF_CO_density, NF_donor_average_density)\n\n# kpAbline(kp, h=0, lty=1, ymax=kp$latest.plot$computed.values$max.density, r0=0.6, r1=1, col=\"black\", lwd = 2)\nlegend(x = \"bottom\", fill = c(\"coral\", \"cornflowerblue\"), legend = c(\"AS\", \"NF\"), box.lwd = 4)\ndev.off()\n\n\n## Plot the AVE histogram\npdf(file = \"Figures/CO_stats/CO_Genome_Distribution_ave_AS_NF.pdf\", \n    width = 8,\n    height = 11) \n\nkp <- plotKaryotype(\"hg38\", plot.type=2, labels.plotter = NULL, ideogram.plotter\t= NULL, main=\"\", cex=0.2, chromosomes = c(paste0(\"chr\", c(1:22))))\n\n# Plot the ideogram as a line\nkpAddCytobandsAsLine(kp)\n  \nkpAddChromosomeNames(kp, srt=45, cex=0.5)\n\nkpBars(kp, chr=AS_CO_density$seqnames, x0=AS_CO_density$start, x1=AS_CO_density$end, y1=AS_CO_density$AS_donor_average_density, y0=0, ymax = 0.1, data.panel = 1, col = \"coral\",border = \"coral\")\n\nkpBars(kp, chr=NF_CO_density$seqnames, x0=NF_CO_density$start, x1=NF_CO_density$end, y1=NF_CO_density$NF_donor_average_density, y0=0, ymax = 0.1, data.panel = 2, col = \"cornflowerblue\", border = \"cornflowerblue\")\n\nkpAxis(kp, ymax = 0.1, data.panel = 1, cex=0.5, side = 1)\nkpAxis(kp, ymax = 0.1, data.panel = 2, cex=0.5, side = 2)\ndev.off()\n\n\n## Plot the AVE histogram on chr only\npdf(file = \"Figures/CO_stats/CO_Genome_Distribution_ave_AS_NF_chr6.pdf\", \n    width = 8,\n    height = 3) \n\nkp <- plotKaryotype(\"hg38\", plot.type=2, labels.plotter = NULL, ideogram.plotter\t= NULL, main=\"\", cex=0.2, chromosomes = c(paste0(\"chr\", c(6))))\n\n# Plot the ideogram as a line\nkpAddCytobandsAsLine(kp)\n  \nkpAddChromosomeNames(kp, srt=45, cex=0.5)\n\nkpBars(kp, chr=AS_CO_density$seqnames, x0=AS_CO_density$start, x1=AS_CO_density$end, y1=AS_CO_density$AS_donor_average_density, y0=0, ymax = 0.1, data.panel = 1, col = \"coral\",border = \"coral\")\n\nkpBars(kp, chr=NF_CO_density$seqnames, x0=NF_CO_density$start, x1=NF_CO_density$end, y1=NF_CO_density$NF_donor_average_density, y0=0, ymax = 0.1, data.panel = 2, col = \"cornflowerblue\", border = \"cornflowerblue\")\n\nkpAxis(kp, ymax = 0.1, data.panel = 1, cex=0.5, side = 1)\nkpAxis(kp, ymax = 0.1, data.panel = 2, cex=0.5, side = 2)\ndev.off()\n```\n:::\n\n\n### Check the hotspot density\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\ntxdb <- TxDb.Hsapiens.UCSC.hg38.knownGene\n\n# Combine the AS density and NF density \nAS_NF_CO_density <- left_join(AS_CO_density, NF_CO_density)\n\nAS_NF_CO_density <- AS_NF_CO_density %>% dplyr::select(seqnames, start, end, AS_CO_density, NF_CO_density)\n\nfwrite(AS_NF_CO_density, \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/AS_NF_Co_density.csv\")\n\nwrite.table(AS_NF_CO_density[, c(1:3)], \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/AS_NF_Co_density_windows_info.bed\", sep = \"\\t\", col.names = FALSE, quote = FALSE, row.names = FALSE)\n\n# Extract the high CO region\n\nhigh_CO_density <- AS_NF_CO_density %>% dplyr::filter(AS_CO_density >= 2, NF_CO_density >= 2)\n\ncolnames(high_CO_density)[1] <- \"chr\"\n\nhigh_CO_density$chr <- gsub(\"chr\", \"\", high_CO_density$chr)\n\n# specify the database\nensembl = useMart(\"ensembl\", dataset = \"hsapiens_gene_ensembl\")\n\n# queries per row\nres <- high_CO_density %>% \n  split(1:nrow(.)) %>% \n  map(~getBM(attributes=c(\"external_gene_name\", \"chromosome_name\", \"start_position\", \"end_position\"), \n             filters = c(\"chromosome_name\" , \"start\", \"end\"), \n             values = list(.$chr, .$start, .$end), \n             mart = ensembl))\n# Function to merge a specific column, ignoring empty values\nmerge_column_ignore_empty <- function(df, column_name) {\n    merged_vector <- paste(df[[column_name]][df[[column_name]] != \"\"], collapse = \",\")\n    return(merged_vector)\n}\n\n# Apply the function to all data frames in the list\nmerged_vectors_list <- lapply(res, merge_column_ignore_empty, column_name = \"external_gene_name\")\n\n# Bind the merged vectors as a single column\nresulting_dataframe <- do.call(rbind, merged_vectors_list)\n\ncolnames(resulting_dataframe) <- \"genes\"\n\nhigh_CO_density <- cbind(high_CO_density, resulting_dataframe)\n\n# Output the high CO density bed file \n\nwrite.table(high_CO_density[, c(1:3)], \n            \"D:/sperm_project/manuscript_09_23_2023/Tables/section_3_crossover/high_crossover_density.bed\", \n            sep = \"\\t\", col.names = FALSE, quote = FALSE, row.names = FALSE)\n\ngenes_in_the_windows <- as.vector(high_CO_density$genes)\n```\n:::\n\n\n## CO Frequency\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\n## Load the sperm sample name list\nsperm_list_df <- fread(\"dataset/sperm_information/sperm_sample_nameList.tsv\", header = F) %>% as.data.frame()\n\n## Remove the aneuploidy sperms\n\naneuploid_sperms <- c(\"AS24s5\", \"AS30s3\", \"AS30s4\", \"AS32s4\", \"AS35s1\", \"AS41s4\", \"NF23-1s5\", \"NF25-1s1\", \"NF31-2s5\", \"N30-2s3\", \"N27-3s3\")\n\nsperm_list_df <- sperm_list_df %>% filter(!V1 %in% aneuploid_sperms)\n\n## Unify the sperm name in normal samples\ncolnames(sperm_list_df) <- \"sperm_id\"\n\nsperm_list_df$sperm_id <- gsub(\"N\", \"NF\", sperm_list_df$sperm_id)\nsperm_list_df$sperm_id <- gsub(\"NFF\", \"NF\", sperm_list_df$sperm_id)\n\nsperm_chromosome_level_CO_freq <- data.frame(sperm_id = rep(sperm_list_df[,1], each = 22),\n                                             chr = rep(c(1:22), times = length(sperm_list_df[,1])))\n\nsperm_chromosome_level_CO_freq$Individual <- gsub(\"s\\\\d$\", \"\", sperm_chromosome_level_CO_freq$sperm_id)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  summarise(chromosome_CO_count = n(),.groups = 'drop') %>%\n  as.data.frame()\n\nView(chr_level_CO_table_number_table)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  summarise(chromosome_CO_count = n(),.groups = 'drop') %>%\n  as.data.frame()\n\nchr_level_CO_table_number_table$chr <- as.integer(chr_level_CO_table_number_table$chr)\n\n## Left join\n\neach_sperm_chromosome_level_CO_freq <- left_join(sperm_chromosome_level_CO_freq, chr_level_CO_table_number_table)\n\n## Delete the aneuploidy\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% mutate(chromosome_CO_count = ifelse(is.na(chromosome_CO_count), 0, chromosome_CO_count)) %>% \n  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\n\n\n## T test on chromosome number\nAS_group_count <- each_sperm_chromosome_level_CO_freq[each_sperm_chromosome_level_CO_freq$Type==\"AS\", \"chromosome_CO_count\"]\nAS_group_count[is.na(AS_group_count)] <- 0\n\nNF_group_count <- each_sperm_chromosome_level_CO_freq[each_sperm_chromosome_level_CO_freq$Type==\"NF\", \"chromosome_CO_count\"]\nNF_group_count[is.na(NF_group_count)] <- 0\n\nt.test(AS_group_count, NF_group_count)\n\n\n\nggplot(each_sperm_chromosome_level_CO_freq, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 1, width = 0.3, height = 0.4) + \n  scale_color_manual(values=c(\"coral\", \"cornflowerblue\"))+\n  ylim(c(0,10))\n  \n  \n## Make the table about Sperm level average crossover\n\nsperm_level_ave_chr_CO_freq <- each_sperm_chromosome_level_CO_freq %>% \n  group_by(sperm_id) %>% \n  summarise(Sperm_ave_all_chr_level_CO = mean(chromosome_CO_count, na.rm=TRUE)) %>%  as.data.frame() %>%\n  mutate(Type = ifelse(grepl(\"AS\", sperm_id ), \"AS\", \"NF\")) %>% as.data.frame()\n```\n:::\n\n\n## Average crossover of each sperm (Figure 2B)\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\neach_sperm_chromosome_level_CO_freq <- readRDS(\"dataset/CO_table/each_sperm_each_chr_CO_table.rds\")\n\n## Make the table about Sperm level average crossover\n\nsperm_level_ave_chr_CO_freq <- each_sperm_chromosome_level_CO_freq %>% \n  group_by(sperm_id) %>% \n  summarise(Sperm_ave_all_chr_level_CO = mean(chromosome_CO_count, na.rm=TRUE)) %>%  as.data.frame() %>%\n  mutate(Type = ifelse(grepl(\"AS\", sperm_id ), \"AS\", \"NF\")) %>% as.data.frame()\n\nsaveRDS(sperm_level_ave_chr_CO_freq, \"dataset/CO_table/sperm_level_ave_chr_CO_freq.rds\")\n\n## Plot the single sperm \n## sperms on each chromosome\n\nggplot(sperm_level_ave_chr_CO_freq, aes(x = Type, y = Sperm_ave_all_chr_level_CO, colour = Type)) + \n    geom_boxplot() +\n  geom_jitter(aes(colour = Type), size = 1.5, width = 0.2, height = 0.4, alpha = 0.8) + \n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1), limits = c(0, 3)) +  # Set custom y-axis tick values and limits\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.5),  # Adjust the color and size of horizontal gridlines\n    panel.border = element_rect(\n      color = \"black\",\n      size = 1,\n      fill = NA\n    ),\n    text = element_text(size = 12, color = \"black\"),\n    legend.position=\"none\",\n    axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n    axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\")\n  ) + \n  labs(y = \"Count\", x = \"\") + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 3,\n                                         label.x = 1.5,\n                                         aes(label = paste0(\"P = \", after_stat(p.format))), size = 3)\n\nggsave(paste0(\"Figures/CO_stats/each_sperm_chr_ave.pdf\"), width = 4, height = 4) \n\n\n\n## Individual level all chr ave CO table\n\nsperm_level_ave_chr_CO_freq$Individual <- gsub(\"s\", \"\", str_extract(sperm_level_ave_chr_CO_freq$sperm_id, str_c(c(\"AS\\\\d+s\", \"AS\\\\d+-\\\\d+\", \"NF\\\\d+-\\\\d\"), collapse = \"|\")))\n\nIndividual_level_CO_freq <- sperm_level_ave_chr_CO_freq %>% group_by(Individual) %>% summarise(Individual_level_CO_freq = mean(Sperm_ave_all_chr_level_CO, na.rm=TRUE)) %>%  as.data.frame() #%>%\n#  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\")) %>% as.data.frame() %>% mutate(energy = exp(Individual_level_CO_freq))\n\n## Save the individual level co freq dataset\nsaveRDS(Individual_level_CO_freq, \"dataset/CO_table/Individual_level_CO_freq.rds\")\n```\n:::\n\n\n## Average Crossover and Chromosome\n\n\n::: {.cell filename='R script'}\n\n```{.r .cell-code}\neach_sperm_chromosome_level_CO_freq <- readRDS(\"dataset/CO_table/each_sperm_each_chr_CO_table.rds\")\nfwrite(each_sperm_chromosome_level_CO_freq,\n       \"tables/each_sperm_chromosome_level_CO_freq.csv\")\n\neach_chromosome_ave_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::group_by(chr, Type) %>% summarize(Average_Value = mean(chromosome_CO_count))\n\n## Load the chromosome length\n\nkp <- plotKaryotype(\"hg38\", plot.type=2, labels.plotter = NULL, ideogram.plotter\t= NULL, main=\"\", cex=0.2, chromosomes = c(paste0(\"chr\", c(1:22))))\n\nchromosome_length <- data.frame(kp$chromosome.lengths)\nchromosome_length$chr <- c(1:22)\nchromosome_length$chr_name <- rownames(chromosome_length)\n\ncolnames(chromosome_length)[1] <- \"length\"\n\neach_chromosome_ave_CO_freq <- left_join(each_chromosome_ave_CO_freq, chromosome_length) %>% as.data.frame()\n\nset.seed(42)\n\nggplot(data = each_chromosome_ave_CO_freq, aes(x = length, y = Average_Value, color = Type, label = chr_name)) +\n  geom_point(size = 2, alpha = 0.8) + \n  labs(\n       x = \"Chromosome Length\",\n       y = \"Ave. CO Number\") +\n    geom_smooth(se = FALSE, method = \"gam\", formula = y ~ s(log(x)), linetype = \"dashed\", size = 0.5) + \n  theme_classic2() + geom_text_repel(size = 2) +  \n  scale_color_manual(values=c(\"coral\", \"cornflowerblue\")) + \n  scale_fill_manual(values=c(\"coral\", \"cornflowerblue\")) +\n  theme(legend.position = \"none\",\n        panel.border = element_rect(\n          color = \"black\",\n          size = 1,\n          fill = NA\n          ),\n        text = element_text(size = 12, color = \"black\"),\n        axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n        axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n        axis.title.x = element_text(size = 12, color = \"black\", face = \"bold\"),\n        axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\")\n        )\n\nggsave(paste0(\"Figures/CO_stats/CO_and_chromosome.pdf\"), width = 8, height = 3)  \n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}