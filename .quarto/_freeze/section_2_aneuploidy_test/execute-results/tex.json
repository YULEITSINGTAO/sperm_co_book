{
  "hash": "c0bee35eaee5fd8f268a969339cc7831",
  "result": {
    "markdown": "# Aneuploidy Test\n\n## Sequencing Depth in windows\n\nBased on the aligned sperm sequence and blood sequence, we can use [cnvseq](https://github.com/hliang/cnv-seq) to call the depth in slide window and the CNV.\n\n\n\n::: {.cell filename='R script (Need to delete)'}\n\n```{.r .cell-code}\ncnv_count_directory <- \"../datasets/sperm_cnv_windows/\"\nfigure_out_directory <- \"../figures/figure_cnv_plot/\"\n\nfileList <- list.files(path = cnv_count_directory, pattern = \"*.cnv$\", all.files = FALSE,\n                       full.names = FALSE, recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)\n\nCNV_list <- list()\n\nfor (sperm_count_file in fileList) {\n  \n  sperm_ID <- gsub(\"\\\\..*\",\"\", sperm_count_file)\n  \n  ## Input the output from cnv-seq\n  cnv <- read.table(paste0(cnv_count_directory, sperm_count_file), header = T)\n  \n  ## Extract the cnv in chr1 to chr22 and chrX and chrY\n  cnv <- cnv[cnv$chromosome %in% c(paste0(\"chr\", c(1:22))), ]\n  \n  cnv$chromosome <- factor(cnv$chromosome, levels = c(paste0(\"chr\", c(1:22))))\n  \n  cnv <- cnv[order(cnv$chromosome),]\n  \n  ## cnv$color <- colByChr(as.character(cnv$chromosome), colors = \"2blues\")\n  \n  rownames(cnv) <- NULL\n  \n  ## Delete the log2 NA\n  cnv <- cnv[!is.na(cnv$log2), ]\n  \n  ### Assign (pos or neg) sign to the cnv value\n  cnv$cn.withDir <- ifelse(is.na(cnv$cnv.log2), 0, cnv$cnv.log2)\n  \n  CNV_list[[sperm_ID]] <- cnv\n    \n  cnv_GRanges <- makeGRangesFromDataFrame(cnv)\n  \n  \n  cnv_GRanges$lrr <- cnv$log2\n  \n  \n  # cnv_GRanges$cn <- cnv$cnv.log2\n  # cnv_GRanges$color <- cnv$color\n    \n  cncalls <- loadCopyNumberCalls(cnv, cn.col=\"cn.withDir\")\n  \n  ## \n  if(FALSE){\n    \n    pdf(paste0(figure_out_directory, sperm_ID, \".pdf\"), width = 8.3, height = 2)\n    \n    kp <- plotKaryotype(\"hg38\", plot.type = 4, labels.plotter = NULL, main=\"\", cex=0.02,\n                        chromosomes=paste0(\"chr\", c(1:22)),\n                        ideogram.plotter\t= NULL)\n    \n    # Plot the ideogram as a line\n    kpAddCytobandsAsLine(kp)\n    \n    kpAddChromosomeNames(kp, srt=45, cex=0.8)\n    \n    #plotLRR(kp, cnv_GRanges, ymin=-5, ymax=5, labels = NA, out.of.range = \"points\", out.of.range.col=\"red\",points.col = \"#AAAAAAAA\", line.at.0 = FALSE, points.cex = 3, add.axis = FALSE)\n  \n    # Modify the \"lrr\" values to be at most 5\n    cnv_GRanges$lrr <- pmin(abs(cnv_GRanges$lrr), 5) * sign(cnv_GRanges$lrr)\n  \n    plotLRR(kp,\n            cnv_GRanges, \n            ymin=-4, \n            ymax=4, \n            labels = NA, \n            out.of.range = \"points\", \n            out.of.range.col=\"#DC0000FF\", \n            points.col = \"#AAAAAAAA\", \n            line.at.0 = FALSE, \n            points.cex = 0.8, \n            add.axis = FALSE)\n  \n  \n  #plotCopyNumberCallsAsLines(kp, cn.calls = cncalls, ymin=-2, ymax=2, lwd=6, add.axis=FALSE, labels = NA, col=\"#48B774\", style=\"segments\", r0=0.4, r1=0.6)\n  \n  kpAddChromosomeSeparators(kp, lwd=1.5, col = \"#666666\")\n  kpAxis(kp, ymin = -5, ymax=5, tick.pos = -5:5, cex=0.8, offset = 0.1)\n  kpAddLabels(kp, labels = \"Log2 Ratio\", cex=0.8, srt=90, pos=3, label.margin = 0.03)\n  # Add a title to the karyoplot using the title function\n  kpAddMainTitle(kp, sperm_ID, cex=1)\n  kpAbline(kp, h=0.5, col=\"black\", lwd=2)\n\n  \n  dev.off()\n  }\n}\n```\n:::\n",
    "supporting": [
      "section_2_aneuploidy_test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}