{"title":"Filter Hapi Result","markdown":{"headingText":"Filter Hapi Result","containsRefs":false,"markdown":"\n```{r, filename = \"R script\", eval = FALSE}\nerror_rate_vector = c(\"default\", \"90\", \"80\", \"70\", \"60\", \"50\", \"40\", \"30\", \"20\")\n\nfor (i in error_rate_vector) {\n  # Create a list to store data frames from individual files\n  co_list <- lapply(1:22, function(chr_id) {\n    readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"/chr\", chr_id, \".rds\"))\n    })\n  \n  # Combine data frames into a single data frame\n  whole_co_merged <- do.call(rbind, co_list)\n  \n  # Generate the file name including the error rate\n  output_file <- paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \".rds\")\n  \n  # Save the merged data frame to an RDS file with the correct file name\n  saveRDS(whole_co_merged, output_file)\n}\n\n```\n\n## Outlier Filter\n\n### Outlier Filter on Whole Sperms (This step was embeded in the CO calling step)\n\n```{r, filename = \"R script\", eval = FALSE}\noutlier_filter_chr_df <- c()\n\nfor (chr_id in c(1:22)) {\n  \n  chr_i_CO <- readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ/chr\", chr_id, \".rds\"))\n  \n  sperm_id_list <- unique(chr_i_CO$sperm_id)\n  \n  chr_i_CO$start_order_m_end_order <- NA\n  \n  chr_i_CO$end_order_m_start_order <- NA\n  \n  chr_i_CO$outlier_filter_1 <- 0\n  \n  chr_i_CO$outlier_filter_2 <- 0\n  \n  chr_i_CO$outlier_filter_1_and_2 <- 0\n  \n  chr_i_CO$color <- \"azure3\"\n  \n  for (sperm in sperm_id_list) {\n    chr_i_CO_sub <- chr_i_CO %>% filter(sperm_id == sperm)\n    \n    if(nrow(chr_i_CO_sub) < 5){\n      chr_i_CO_sub$outlier_filter_1_and_2 = 1\n      chr_i_CO_sub$color[chr_i_CO_sub$outlier_filter_1_and_2 == 1] <- \"brown3\"\n    }else{\n      chr_i_CO_sub$start_order_m_end_order[2:length(chr_i_CO_sub$start_order_m_end_order)] <- chr_i_CO_sub$hap_position_order.x[2:length(chr_i_CO_sub$hap_position_order.x)] - chr_i_CO_sub$hap_position_order.y[1:length(chr_i_CO_sub$hap_position_order.x) - 1]\n      chr_i_CO_sub$end_order_m_start_order[1:length(chr_i_CO_sub$start_order_m_end_order) - 1] <- chr_i_CO_sub$hap_position_order.x[2:length(chr_i_CO_sub$hap_position_order.x)] - chr_i_CO_sub$hap_position_order.y[1:length(chr_i_CO_sub$hap_position_order.x) - 1]  \n      \n      quartiles_1 <- quantile(chr_i_CO_sub$start_order_m_end_order, probs=c(.25, .75), na.rm = TRUE)\n      quartiles_2 <- quantile(chr_i_CO_sub$end_order_m_start_order, probs=c(.25, .75), na.rm = TRUE)\n      \n      IQR_1 <- IQR(chr_i_CO_sub$start_order_m_end_order[!is.na(chr_i_CO_sub$start_order_m_end_order)])\n      IQR_2 <- IQR(chr_i_CO_sub$end_order_m_start_order[!is.na(chr_i_CO_sub$end_order_m_start_order)])\n      \n      Upper_1 <- as.numeric(quartiles_1[2]) + 1.5*IQR_1 \n      Upper_2 <- as.numeric(quartiles_2[2]) + 1.5*IQR_2 \n      \n      chr_i_CO_sub$outlier_filter_1[chr_i_CO_sub$start_order_m_end_order > Upper_1] <- 1\n      chr_i_CO_sub$outlier_filter_2[chr_i_CO_sub$end_order_m_start_order > Upper_2] <- 1\n      chr_i_CO_sub$outlier_filter_1_and_2[chr_i_CO_sub$start_order_m_end_order > Upper_1 & chr_i_CO_sub$end_order_m_start_order > Upper_2] <- 1\n      \n      chr_i_CO_sub$color[chr_i_CO_sub$outlier_filter_1_and_2 == 1] <- \"brown3\"\n      \n    }\n    outlier_filter_chr_df <- rbind(outlier_filter_chr_df, chr_i_CO_sub)\n  }\n  \n}\n\nsaveRDS(outlier_filter_chr_df, \"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_filtered_table/outlier_exclude_end.rds\")\n```\n\n### 85% Quantile Filter on Whole Sperms (This step was embeded in the CO calling step)\n\n```{r, filename = \"R script\", eval = FALSE}\noutlier_filter_chr_df <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_filtered_table/outlier_exclude_end.rds\")\n\nquantile_filter_chr_df <- c()\n\nfor (chr_id in c(1:22)) {\n  \n  chr_i_CO <- outlier_filter_chr_df %>% dplyr::filter(chr == chr_id)\n  \n  sperm_id_list <- unique(chr_i_CO$sperm_id)\n  \n  chr_i_CO$quantile_filter_1 <- 0\n  \n  chr_i_CO$quantile_filter_2 <- 0\n  \n  chr_i_CO$quantile_filter_1_and_2 <- 0\n  \n  for (sperm in sperm_id_list) {\n    chr_i_CO_sub <- chr_i_CO %>% filter(sperm_id == sperm)\n    \n    if(sum(chr_i_CO_sub$outlier_filter_1_and_2) > 0){\n    }else{\n      \n      quantile_1 <- quantile(chr_i_CO_sub$start_order_m_end_order, probs=c(.25, .85), na.rm = TRUE)\n      quantile_2 <- quantile(chr_i_CO_sub$end_order_m_start_order, probs=c(.25, .85), na.rm = TRUE)\n      Upper_1 <- as.numeric(quantile_1[2])\n      Upper_2 <- as.numeric(quantile_2[2])\n      \n      chr_i_CO_sub$quantile_filter_1[chr_i_CO_sub$start_order_m_end_order > Upper_1] <- 1\n      chr_i_CO_sub$quantile_filter_2[chr_i_CO_sub$end_order_m_start_order > Upper_2] <- 1\n      chr_i_CO_sub$quantile_filter_1_and_2[chr_i_CO_sub$start_order_m_end_order > Upper_1 & chr_i_CO_sub$end_order_m_start_order > Upper_2] <- 1\n      \n      chr_i_CO_sub$color[chr_i_CO_sub$quantile_filter_1_and_2 == 1] <- \"blue\"\n      \n    }\n    quantile_filter_chr_df <- rbind(quantile_filter_chr_df, chr_i_CO_sub)\n  }\n  \n}\n\nsaveRDS(quantile_filter_chr_df, \"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_filtered_table/exclude_end_quantile_85.rds\")\n```\n\n### 75% Quantile Filter on Whole Sperms\n\n```{r, filename = \"R script\", eval = FALSE}\nerror_rate_vector = c(\"40\", \"30\", \"20\")\n\n\nfor (i in error_rate_vector) {\n  \n  outlier_filter_chr_df <- readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \".rds\"))\n  quantile_filter_chr_df <- c()\n  \n  for (chr_id in c(1:22)) {\n    \n    chr_i_CO <- outlier_filter_chr_df %>% dplyr::filter(chr == chr_id)\n    sperm_id_list <- unique(chr_i_CO$sperm_id)\n    \n    chr_i_CO$single_sperm_quantile_filter_1_75 <- 0\n    chr_i_CO$single_sperm_quantile_filter_2_75 <- 0\n    chr_i_CO$single_sperm_quantile_filter_1_and_2_75 <- 0\n    \n    for (sperm in sperm_id_list) {\n      chr_i_CO_sub <- chr_i_CO %>% filter(sperm_id == sperm)\n      \n      if(nrow(chr_i_CO_sub) < 5){\n      chr_i_CO_sub$quantile_filter_1_and_2_75 = 1\n      chr_i_CO_sub$color[chr_i_CO_sub$quantile_filter_1_and_2_75 == 1] <- \"brown3\"\n      }else{\n        \n        single_sperm_quantiles_1 <- quantile(chr_i_CO_sub$start_order_m_end_order, probs=c(.25, .75), na.rm = TRUE)\n        single_sperm_quantiles_2 <- quantile(chr_i_CO_sub$end_order_m_start_order, probs=c(.25, .75), na.rm = TRUE)\n        \n        single_sperm_Upper_1 <- as.numeric(single_sperm_quantiles_1[2])\n        single_sperm_Upper_2 <- as.numeric(single_sperm_quantiles_2[2])\n        \n        chr_i_CO_sub$single_sperm_quantile_filter_1_75[chr_i_CO_sub$start_order_m_end_order > single_sperm_Upper_1] <- 1\n        chr_i_CO_sub$single_sperm_quantile_filter_2_75[chr_i_CO_sub$end_order_m_start_order > single_sperm_Upper_2] <- 1\n        chr_i_CO_sub$single_sperm_quantile_filter_1_and_2_75[chr_i_CO_sub$start_order_m_end_order > single_sperm_Upper_1 & chr_i_CO_sub$end_order_m_start_order > single_sperm_Upper_2] <- 1\n        chr_i_CO_sub$color[chr_i_CO_sub$single_sperm_quantile_filter_1_and_2_75 == 1] <- \"brown3\"\n        quantile_filter_chr_df <- rbind(quantile_filter_chr_df, chr_i_CO_sub)\n        }\n  \n    }\n    saveRDS(quantile_filter_chr_df, paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"_Q75.rds\"))\n\n  }\n}\n\n```\n\n### 65% Quantile Filter on Whole Sperms\n\n```{r, filename = \"R script\", eval = FALSE}\nerror_rate_vector = c(\"default\", \"90\", \"80\", \"70\", \"60\", \"40\", \"30\", \"20\")\n\n\nfor (i in error_rate_vector) {\n  \n  outlier_filter_chr_df <- readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"_Q75.rds\"))\n  quantile_filter_chr_df <- c()\n  \n  for (chr_id in c(1:22)) {\n    \n    chr_i_CO <- outlier_filter_chr_df %>% dplyr::filter(chr == chr_id)\n    sperm_id_list <- unique(chr_i_CO$sperm_id)\n    \n    chr_i_CO$single_sperm_quantile_filter_1_65 <- 0\n    chr_i_CO$single_sperm_quantile_filter_2_65 <- 0\n    chr_i_CO$single_sperm_quantile_filter_1_and_2_65 <- 0\n    \n    for (sperm in sperm_id_list) {\n      chr_i_CO_sub <- chr_i_CO %>% filter(sperm_id == sperm)\n      \n      if(nrow(chr_i_CO_sub) < 5){\n      chr_i_CO_sub$quantile_filter_1_and_2_65 = 1\n      chr_i_CO_sub$color[chr_i_CO_sub$quantile_filter_1_and_2_65 == 1] <- \"brown3\"\n      }else{\n        \n        single_sperm_quantiles_1 <- quantile(chr_i_CO_sub$start_order_m_end_order, probs=c(.25, .65), na.rm = TRUE)\n        single_sperm_quantiles_2 <- quantile(chr_i_CO_sub$end_order_m_start_order, probs=c(.25, .65), na.rm = TRUE)\n        \n        single_sperm_Upper_1 <- as.numeric(single_sperm_quantiles_1[2])\n        single_sperm_Upper_2 <- as.numeric(single_sperm_quantiles_2[2])\n        \n        chr_i_CO_sub$single_sperm_quantile_filter_1_65[chr_i_CO_sub$start_order_m_end_order > single_sperm_Upper_1] <- 1\n        chr_i_CO_sub$single_sperm_quantile_filter_2_65[chr_i_CO_sub$end_order_m_start_order > single_sperm_Upper_2] <- 1\n        chr_i_CO_sub$single_sperm_quantile_filter_1_and_2_65[chr_i_CO_sub$start_order_m_end_order > single_sperm_Upper_1 & chr_i_CO_sub$end_order_m_start_order > single_sperm_Upper_2] <- 1\n        chr_i_CO_sub$color[chr_i_CO_sub$single_sperm_quantile_filter_1_and_2_65 == 1] <- \"brown3\"\n        quantile_filter_chr_df <- rbind(quantile_filter_chr_df, chr_i_CO_sub)\n        }\n  \n    }\n    saveRDS(quantile_filter_chr_df, paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"_Q65.rds\"))\n\n  }\n}\n```\n\n```{r, filename = \"R script\", eval = FALSE}\ni = \"70\"\n\nCO_table <- readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"_Q65.rds\"))\n\n## Order of selection\n## Outlier\n\noutlier_filtered_CO <- CO_table %>% dplyr::filter(outlier_filter_1_and_2 == 1)\n\n\n## Single Sperm 85 qunatile\n\nselected_sperm_and_chr <- unique(outlier_filtered_CO %>% dplyr::select(sperm_id, chr))\n\nremove_outlier_filtered_CO <- dplyr::anti_join(CO_table, selected_sperm_and_chr, by = c(\"sperm_id\", \"chr\"))\n\nquantile_85_single_sperm_filtered_CO <- remove_outlier_filtered_CO %>% dplyr::filter(single_sperm_quantile_filter_1_and_2 == 1)\n\n\n## Single Sperm 75 quantile \n\nselected_sperm_and_chr <- unique(quantile_85_single_sperm_filtered_CO %>% dplyr::select(sperm_id, chr))\n\nremove_quantile_85_single_sperm_filtered_CO <-  dplyr::anti_join(remove_outlier_filtered_CO, selected_sperm_and_chr, by = c(\"sperm_id\", \"chr\"))\n\nquantile_75_single_sperm_filtered_CO <- remove_quantile_85_single_sperm_filtered_CO %>% dplyr::filter( single_sperm_quantile_filter_1_and_2_75 == 1)\n\n## Combine three filter CO\n\nfinal_filtered_table <- rbind(outlier_filtered_CO, quantile_85_single_sperm_filtered_CO, quantile_75_single_sperm_filtered_CO) %>% mutate(chr = as.numeric(chr)) %>% arrange(Individual, sperm_id, chr)\n\nchr_level_CO_table_new <- final_filtered_table %>% dplyr::mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n  \n```\n\n```{r, filename = \"R script\", eval = FALSE}\n##\n## Load the sperm sample name list\nsperm_list_df <- fread(\"D:/sperm_project/sperm_vcf_file/sperm_sampleList/sperm_sample_nameList.tsv\", header = F) %>% as.data.frame()\n\n## Unify the sperm name in normal samples\ncolnames(sperm_list_df) <- \"sperm_id\"\n\nsperm_list_df$sperm_id <- gsub(\"N\", \"NF\", sperm_list_df$sperm_id)\nsperm_list_df$sperm_id <- gsub(\"NFF\", \"NF\", sperm_list_df$sperm_id)\n\n## Load the NA deleted sperm\nNA_removed_sperm <- readRDS(\"D:/sperm_project/Hapi_input/QUAL_and_RGQ_aneu_removed/remove_by_NA_sperm_list.rds\")\n\n\n## Load the less 3 sperm individual\n\nless_three_sperm_donor <- readRDS(\"D:/sperm_project/Hapi_input/QUAL_and_RGQ_aneu_NA_removed_3/remove_donor.rds\")\n\n## Remove the aneuploidy sperms\n\naneuploid_sperms <- c(\"AS24s5\", \"AS30s3\", \"AS30s4\", \"AS32s4\", \"AS35s1\", \"AS41s4\", \"NF23-1s5\", \"NF25-1s1\", \"NF31-2s5\", \"NF30-2s3\", \"NF27-3s3\", NA_removed_sperm) \n\n\nsperm_list_df <- sperm_list_df %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\n\n\nsperm_chromosome_level_CO_freq <- data.frame(sperm_id = rep(sperm_list_df[,1], each = 22),\n                                             chr = rep(c(1:22), times = length(sperm_list_df[,1])))\n\nsperm_chromosome_level_CO_freq$Individual <- gsub(\"s\\\\d$\", \"\", sperm_chromosome_level_CO_freq$sperm_id)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  dplyr::summarise(chromosome_CO_count = n(), .groups = 'drop') %>%\n  as.data.frame()\n\n## Left join\n\neach_sperm_chromosome_level_CO_freq <- left_join(sperm_chromosome_level_CO_freq, chr_level_CO_table_number_table)\n\n## Delete the aneuploidy\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\n# Delete the aneuploidy donor\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!Individual %in% c(less_three_sperm_donor))\n\n\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% mutate(chromosome_CO_count = ifelse(is.na(chromosome_CO_count), 0, chromosome_CO_count)) %>% \n  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\n\n##\n```\n\n```{r, filename = \"R script\", eval = FALSE}\n\n# Filter the original dataset to count occurrences of zero chromosome_CO_count\nzero_count_table <- each_sperm_chromosome_level_CO_freq %>%\n  filter(chromosome_CO_count == 0) %>%\n  count(sperm_id)\n\n# Make a copy of the original dataset\ninput_data <- each_sperm_chromosome_level_CO_freq\n  \n# Get the sperm_ids to remove based on the threshold\nremoved_donor_by_CO_number <- zero_count_table$sperm_id[zero_count_table$n > 15]\n  \n# Filter out donors with less than three sperm\ninput_data <- input_data %>%\n  filter(!Individual %in% less_three_sperm_donor)\n  \n# Filter out donors with chromosome_CO_count greater than threshold\ninput_data <- input_data %>%\n  filter(!sperm_id %in% removed_donor_by_CO_number)\n  \n# T test on chromosomal crossover number\nAS_group_count <- input_data[input_data$Type == \"AS\", \"chromosome_CO_count\"]\nAS_group_count[is.na(AS_group_count)] <- 0\n  \nNF_group_count <- input_data[input_data$Type == \"NF\", \"chromosome_CO_count\"]\nNF_group_count[is.na(NF_group_count)] <- 0\n  \nt_test_res <- t.test(AS_group_count, NF_group_count)\n```\n\n```{r, filename = \"R script\", eval = FALSE}\n\n# Create the plot with larger text size and other customizations\nggplot(input_data, aes(x = Type, y = chromosome_CO_count)) +\n  geom_jitter(aes(colour = Type), size = 1.5, width = 0.2, height = 0.4) +\n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  ylim(c(0,10)) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values\n  labs(x = \"\", y = \"Count\") +  # Update axis labels\n  theme_minimal() +  # Use a minimal theme for cleaner appearance\n  theme(text = element_text(size = 18, color = \"black\"),\n        legend.position=\"none\",\n        axis.text.x = element_text(color = \"black\"),  # X-axis text color\n        axis.text.y = element_text(color = \"black\"),\n        panel.border = element_rect(\n          color = \"black\",  # Border color\n          size = 2,         # Border size (adjust as needed)\n          fill = NA         # No fill inside the border\n          )) + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 5.5)\n  \n\n\n\nggsave(paste0(\"D:/sperm_project/sperm_CO_table/sperm_CO_each_chr.pdf\"), width = 8, height = 8)  \n## sperms on each chromosome\n\nggplot(input_data, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 1.5, width = 0.2, height = 0.5) + \n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1), limits = c(0, 6)) +  # Set custom y-axis tick values and limits\n  theme_minimal() +\n  facet_wrap(~ chr, nrow = 2) +\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.8),  # Adjust the color and size of horizontal gridlines\n    panel.border = element_rect(\n      color = \"black\",\n      size = 2,\n      fill = NA\n    ),\n    text = element_text(size = 18, color = \"black\"),\n        legend.position=\"none\",\n        axis.text.x = element_text(color = \"black\"),  # X-axis text color\n        axis.text.y = element_text(color = \"black\")\n  ) + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 5.5)\n\n```\n\n## remove by invidual\n\n```{r, filename = \"R script\", eval = FALSE}\n\ni = \"70\"\n\nCO_table <- readRDS(paste0(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_aneu_NA_removed_3/hmm_\", i, \"_Q65.rds\"))\n\n## Order of selection\n## Outlier\n\noutlier_filtered_CO <- CO_table %>% dplyr::filter(outlier_filter_1_and_2 == 1)\n\n\n## Single Sperm 85 qunatile\n\nselected_sperm_and_chr <- unique(outlier_filtered_CO %>% dplyr::select(sperm_id, chr))\n\nremove_outlier_filtered_CO <- dplyr::anti_join(CO_table, selected_sperm_and_chr, by = c(\"sperm_id\", \"chr\"))\n\nquantile_85_single_sperm_filtered_CO <- remove_outlier_filtered_CO %>% dplyr::filter(single_sperm_quantile_filter_1_and_2 == 1)\n\n\n## Single Sperm 75 quantile \n\nselected_sperm_and_chr <- unique(quantile_85_single_sperm_filtered_CO %>% dplyr::select(sperm_id, chr))\n\nremove_quantile_85_single_sperm_filtered_CO <-  dplyr::anti_join(remove_outlier_filtered_CO, selected_sperm_and_chr, by = c(\"sperm_id\", \"chr\"))\n\nquantile_75_single_sperm_filtered_CO <- remove_quantile_85_single_sperm_filtered_CO %>% dplyr::filter( single_sperm_quantile_filter_1_and_2_75 == 1)\n\n## Combine three filter CO\n\nfinal_filtered_table <- rbind(outlier_filtered_CO, quantile_85_single_sperm_filtered_CO, quantile_75_single_sperm_filtered_CO) %>% mutate(chr = as.numeric(chr)) %>% arrange(Individual, sperm_id, chr)\n\nchr_level_CO_table_new <- final_filtered_table %>% dplyr::mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\nsaveRDS(chr_level_CO_table_new, \"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/final_filtered_table.rds\")\n\nchr_level_CO_table_new <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/final_filtered_table.rds\")\n```\n\n```{r, filename = \"R script\", eval = FALSE}\n##\n## Load the sperm sample name list\nsperm_list_df <- fread(\"D:/sperm_project/sperm_vcf_file/sperm_sampleList/sperm_sample_nameList.tsv\", header = F) %>% as.data.frame()\n\n## Unify the sperm name in normal samples\ncolnames(sperm_list_df) <- \"sperm_id\"\n\nsperm_list_df$sperm_id <- gsub(\"N\", \"NF\", sperm_list_df$sperm_id)\nsperm_list_df$sperm_id <- gsub(\"NFF\", \"NF\", sperm_list_df$sperm_id)\n\n## Load the NA deleted sperm\nNA_removed_sperm <- readRDS(\"D:/sperm_project/Hapi_input/QUAL_and_RGQ_aneu_removed/remove_by_NA_sperm_list.rds\")\n\n\n## Load the less 3 sperm individual\n\nless_three_sperm_donor <- readRDS(\"D:/sperm_project/Hapi_input/QUAL_and_RGQ_aneu_NA_removed_3/remove_donor.rds\")\n\n## Remove the aneuploidy sperms\n\naneuploid_sperms <- c(\"AS24s5\", \"AS30s3\", \"AS30s4\", \"AS32s4\", \"AS35s1\", \"AS41s4\", \"NF23-1s5\", \"NF25-1s1\", \"NF31-2s5\", \"NF30-2s3\", \"NF27-3s3\", NA_removed_sperm) \n\n\nsperm_list_df <- sperm_list_df %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\n\n\nsperm_chromosome_level_CO_freq <- data.frame(sperm_id = rep(sperm_list_df[,1], each = 22),\n                                             chr = rep(c(1:22), times = length(sperm_list_df[,1])))\n\nsperm_chromosome_level_CO_freq$Individual <- gsub(\"s\\\\d$\", \"\", sperm_chromosome_level_CO_freq$sperm_id)\n\n## Count the number of CO over chromosomes in chr_level_CO_table\n\nchr_level_CO_table_number_table <- chr_level_CO_table_new %>% group_by(Individual, sperm_id, chr) %>% \n  dplyr::summarise(chromosome_CO_count = n(), .groups = 'drop') %>%\n  as.data.frame()\n\n## Left join\n\neach_sperm_chromosome_level_CO_freq <- left_join(sperm_chromosome_level_CO_freq, chr_level_CO_table_number_table)\n\n## Delete the aneuploidy\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!sperm_id %in% aneuploid_sperms)\n\n# Delete the aneuploidy donor\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::filter(!Individual %in% c(less_three_sperm_donor))\n\n\neach_sperm_chromosome_level_CO_freq <- each_sperm_chromosome_level_CO_freq %>% mutate(chromosome_CO_count = ifelse(is.na(chromosome_CO_count), 0, chromosome_CO_count)) %>% \n  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\"))\n\n\n##\n```\n\n```{r, filename = \"R script\", eval = FALSE}\n\n# Filter the original dataset to count occurrences of zero chromosome_CO_count\nzero_count_table <- each_sperm_chromosome_level_CO_freq %>%\n  dplyr::filter(chromosome_CO_count == 0) %>%\n  dplyr::count(Individual)\n\n# Make a copy of the original dataset\ninput_data <- each_sperm_chromosome_level_CO_freq\n  \n# Get the sperm_ids to remove based on the threshold\nremoved_donor_by_CO_number <- zero_count_table$Individual[zero_count_table$n > 32]\n\nremoved_donor_by_CO_number <- removed_donor_by_CO_number[-c(1,2)]\n\n# Filter out donors with less than three sperm\ninput_data <- input_data %>%\n  filter(!Individual %in% less_three_sperm_donor)\n  \n# Filter out donors with chromosome_CO_count greater than threshold\ninput_data <- input_data %>%\n  filter(!Individual %in% removed_donor_by_CO_number)\n\n# Save the keep sample and sperms\nkept_samples_and_sperms <- input_data %>% dplyr::select(sperm_id, Individual) %>% distinct()\n\n# Save the keep sample and sperms\n\nsaveRDS(kept_samples_and_sperms,\"D:/sperm_project/manuscript_09_23_2023/tables/sample_info/kept_samples_and_sperms.rds\")\n\n# T test on chromosomal crossover number\nAS_group_count <- input_data[input_data$Type == \"AS\", \"chromosome_CO_count\"]\nAS_group_count[is.na(AS_group_count)] <- 0\n  \nNF_group_count <- input_data[input_data$Type == \"NF\", \"chromosome_CO_count\"]\nNF_group_count[is.na(NF_group_count)] <- 0\n  \nt_test_res <- t.test(AS_group_count, NF_group_count)\n\nsaveRDS(input_data, \"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/each_sperm_each_chr_CO_table.rds\")\n```\n\n```{r, filename = \"R script\", eval = FALSE}\ninput_data <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/each_sperm_each_chr_CO_table.rds\")\n\n# Create the plot with larger text size and other customizations\nggplot(input_data, aes(x = Type, y = chromosome_CO_count)) +\n  geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +\n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  ylim(c(0,10)) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values\n  labs(x = \"\", y = \"Count\") +  # Update axis labels\n  theme_minimal() +  # Use a minimal theme for cleaner appearance\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.2),\n    text = element_text(size = 12, color = \"black\"),\n        legend.position=\"none\",\n        axis.text.x = element_text(color = \"black\"),  # X-axis text color\n        axis.text.y = element_text(color = \"black\"),\n        panel.border = element_rect(\n          color = \"black\",  # Border color\n          size = 1,         # Border size (adjust as needed)\n          fill = NA         # No fill inside the border\n          )) + stat_compare_means(method = \"wilcox.test\", paired = FALSE, \n                                  label.y = 7, \n                                  label.x = 1.5,\n                                  aes(label = paste0(\"Pvalue = \", after_stat(p.format))))\n  \n  ggsave(paste0(\"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/sperm_CO_all_chr.pdf\"), width = 4, height = 4)  \n\n## sperms on each chromosome\ninput_data$chr <- paste0(\"chr\", input_data$chr)\ninput_data$chr <- factor(input_data$chr, levels = paste0(\"chr\", c(1:22)))\n\nggplot(input_data, aes(x = Type, y = chromosome_CO_count)) + \n  geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) + \n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1), limits = c(0, 6)) +  # Set custom y-axis tick values and limits\n  theme_minimal() +\n  facet_wrap(~ chr, nrow = 2) +\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.5),  # Adjust the color and size of horizontal gridlines\n    panel.border = element_rect(\n      color = \"black\",\n      size = 0.5,\n      fill = NA\n    ),\n    text = element_text(size = 12, color = \"black\"),\n    legend.position=\"none\",\n    axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n    axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    strip.text.x = element_text(\n      size = 12, color = \"black\", face = \"bold\"\n      ),\n    strip.text.y = element_text(\n      size = 12, color = \"black\", face = \"bold\"\n      )) + \n  labs(y = \"Count\", x = \"\") + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 5.5,\n                         aes(label = paste0(\"P = \", after_stat(p.format))), size = 3)\n\nggsave(paste0(\"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/sperm_CO_each_chr.pdf\"), width = 8, height = 4) \n```\n\n## Merge euploidy and aneuploidy\n\n### Merge chr 1 to chr22\n\n## Draw Figure\n\n```{r, filename = \"R script\", eval = FALSE}\n## Draw Figure\n\nfiltered_table <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_and_RGQ_filtered_table/final_filtered_table.rds\")\n\ndonor_id_list <- unique(filtered_table$Individual)\n\nfor (donor in donor_id_list) {\n  \n  test <- test %>% dplyr::filter(Individual == donor, chr == chr, sperm_id == sperm)\n  \n  \n  test <- filtered_table %>% dplyr::filter(Individual == donor)\n  test$chr <- factor(paste0(\"chr\", test$chr), levels = paste0(\"chr\", c(1:22)))\n  \n  \n  sperm_number <- length(unique(test$sperm_id))\n \n  \n  ggplot(test, aes(x=start_order_m_end_order, y=end_order_m_start_order)) +\n  geom_point(colour = test$color, size = 0.5 + test$outlier_filter_1_and_2 + test$quantile_filter_1_and_2, alpha = max(0.8, test$outlier_filter_1_and_2 + test$quantile_filter_1_and_2)) +\n  theme(legend.position=\"none\", text=element_text(size=12)) + \n  theme_bw() + \n  xlab(\"d1\") + ylab(\"d2\") + \n  facet_grid(sperm_id ~ chr, scales=\"free\")\n  \n  ggsave(paste0(\"D:/sperm_project/sperm_CO_table/Figure_filter_d1_d2/Quantail_filter/\", donor, \".pdf\"), width = 44, height = 2*sperm_number)  \n  \n}\n\n```\n\n## Save the tables\n\n```{r, filename = \"R script\", eval = FALSE}\n\neach_sperm_chromosome_level_CO_freq <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/each_sperm_each_chr_CO_table.rds\")\n\n## Make the table about Sperm level average crossover\n\nsperm_level_ave_chr_CO_freq <- each_sperm_chromosome_level_CO_freq %>% \n  group_by(sperm_id) %>% \n  summarise(Sperm_ave_all_chr_level_CO = mean(chromosome_CO_count, na.rm=TRUE)) %>%  as.data.frame() %>%\n  mutate(Type = ifelse(grepl(\"AS\", sperm_id ), \"AS\", \"NF\")) %>% as.data.frame()\n\nsaveRDS(sperm_level_ave_chr_CO_freq, \"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/sperm_level_ave_chr_CO_freq.rds\")\n\n## Plot the single sperm \n## sperms on each chromosome\n\nggplot(sperm_level_ave_chr_CO_freq, aes(x = Type, y = Sperm_ave_all_chr_level_CO)) + \n  geom_jitter(aes(colour = Type), size = 1, width = 0.2, height = 0.4, alpha = 0.8) + \n  scale_color_manual(values = c(\"coral\", \"cornflowerblue\")) +\n  scale_y_continuous(breaks = seq(0, 10, by = 1), limits = c(0, 3)) +  # Set custom y-axis tick values and limits\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.5),  # Adjust the color and size of horizontal gridlines\n    panel.border = element_rect(\n      color = \"black\",\n      size = 1,\n      fill = NA\n    ),\n    text = element_text(size = 12, color = \"black\"),\n    legend.position=\"none\",\n    axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n    axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n    axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\")\n  ) + \n  labs(y = \"Count\", x = \"\") + stat_compare_means(method = \"wilcox.test\", paired = FALSE, label.y = 3,\n                                         label.x = 1.5,\n                                         aes(label = paste0(\"P = \", after_stat(p.format))), size = 3)\n\nggsave(paste0(\"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/each_sperm_chr_ave.pdf\"), width = 4, height = 4) \n\n\n\n## Individual level all chr ave CO table\n\nsperm_level_ave_chr_CO_freq$Individual <- gsub(\"s\", \"\", str_extract(sperm_level_ave_chr_CO_freq$sperm_id, str_c(c(\"AS\\\\d+s\", \"AS\\\\d+-\\\\d+\", \"NF\\\\d+-\\\\d\"), collapse = \"|\")))\n\nIndividual_level_CO_freq <- sperm_level_ave_chr_CO_freq %>% group_by(Individual) %>% summarise(Individual_level_CO_freq = mean(Sperm_ave_all_chr_level_CO, na.rm=TRUE)) %>%  as.data.frame() %>%\n  mutate(Type = ifelse(grepl(\"AS\", Individual), \"AS\", \"NF\")) %>% as.data.frame() %>% mutate(energy = exp(Individual_level_CO_freq))\n\n## Save the individual level co freq dataset\nsaveRDS(Individual_level_CO_freq, \"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/Individual_level_CO_freq.rds\")\n\n\n```\n\n## Average Crossover and Chromosome\n\n```{r, filename = \"R script\", eval = FALSE}\n\neach_sperm_chromosome_level_CO_freq <- readRDS(\"D:/sperm_project/sperm_CO_table/QUAL_RGQ_aneu_NA_removed_CO_and_clinical_assoc/each_sperm_each_chr_CO_table.rds\")\nfwrite(each_sperm_chromosome_level_CO_freq,\n       \"C:/Users/yulei/Google Drive/Research Jia Lab/Project_3_Sperm/manuscript/Tables/each_sperm_chromosome_level_CO_freq.csv\")\n\neach_chromosome_ave_CO_freq <- each_sperm_chromosome_level_CO_freq %>% dplyr::group_by(chr, Type) %>% summarize(Average_Value = mean(chromosome_CO_count))\n\nggplot(data = each_chromosome_ave_CO_freq, aes(x = chr, y = Average_Value, color = Type)) +\n  ggpmisc::stat_poly_eq(aes(label = paste(after_stat(eq.label),\n                               after_stat(rr.label), sep = \"*\\\", \\\"*\"))) +\n  stat_poly_line(se = FALSE) +\n  geom_point(size = 2) + \n  labs(\n       x = \"Chromosome\",\n       y = \"Ave. CO Number\") +\n  scale_color_manual(values=c(\"coral\", \"cornflowerblue\")) + theme_classic2() +\n  theme(legend.position = \"none\",\n        panel.border = element_rect(\n          color = \"black\",\n          size = 1,\n          fill = NA\n          ),\n        text = element_text(size = 12, color = \"black\"),\n        axis.text.x = element_text(size = 12, color = \"black\", face = \"bold\"),  # X-axis text color\n        axis.text.y = element_text(size = 12, color = \"black\", face = \"bold\"),\n        axis.title.x = element_text(size = 12, color = \"black\", face = \"bold\"),\n        axis.title.y = element_text(size = 12, color = \"black\", face = \"bold\")\n        ) + scale_x_continuous(breaks = seq(1, 22, by = 1))\n\nggsave(paste0(\"D:/sperm_project/manuscript_09_23_2023/Figures/section_3_CO_distribution_and_frequency_count/CO_and_chromosome.pdf\"), width = 8, height = 3)  \n```\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"section_5_filter_HAPI_output.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","bibliography":["references.bib"],"editor":"visual","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"section_5_filter_HAPI_output.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}