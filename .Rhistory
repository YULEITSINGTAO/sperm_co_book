off_target_regions <-  off_target_regions %>% separate_wider_delim(Locus, ":", names = c("Locus_chr", "Locus_pos")) %>% dplyr::mutate(Locus_pos = gsub("[+]|[-]", "", Locus_pos)) %>% as.data.frame()
off_target_regions$Locus_pos <- as.numeric(off_target_regions$Locus_pos)
## Extend the locus into 500 bps on right and left
off_target_regions <- off_target_regions %>% dplyr::mutate(Locus_start = Locus_pos - 50, Locus_end =  Locus_pos + 50)
detect_indels_in_off_target_regions <- function(varscan_output, off_target_regions){
require(dplyr)
indels_in_off_target_regions_list <- list()
i = 1
for (region in c(1:nrow(off_target_regions))) {
chr_id <- off_target_regions[region, "Locus_chr"]
start <- off_target_regions[region, "Locus_start"]
end <- off_target_regions[region, "Locus_end"]
a <- varscan_output %>% dplyr::filter(chrom == chr_id, position >= start, position <= end)
if(nrow(a) > 0){
## add the primer regions information
a$Locus_chr <- chr_id
a$Locus_start <- start
a$Locus_end <- end
indels_in_off_target_regions_list[[i]] <- a
i = i + 1
}
}
indels_in_off_target_regions_df <- do.call("rbind", indels_in_off_target_regions_list)
indels_in_off_target_regions_df <- left_join(off_target_regions, indels_in_off_target_regions_df)
return(indels_in_off_target_regions_df)
}
H_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_H_indel.csv") %>% as.data.frame()
M_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_M_indel.csv") %>% as.data.frame()
N_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_N_indel.csv") %>% as.data.frame()
H_indels_in_off_target_regions <- detect_indels_in_off_target_regions(H_somatic_mutations, off_target_regions)
M_indels_in_off_target_regions <- detect_indels_in_off_target_regions(M_somatic_mutations, off_target_regions)
N_indels_in_off_target_regions <- detect_indels_in_off_target_regions(N_somatic_mutations, off_target_regions)
View(N_indels_in_off_target_regions)
off_target_regions <- fread("D:/research/mike_wgs_cnv/off_target_regions/off_target_positions.csv") %>% as.data.frame()
off_target_regions <-  off_target_regions %>% separate_wider_delim(Locus, ":", names = c("Locus_chr", "Locus_pos")) %>% dplyr::mutate(Locus_pos = gsub("[+]|[-]", "", Locus_pos)) %>% as.data.frame()
off_target_regions$Locus_pos <- as.numeric(off_target_regions$Locus_pos)
## Extend the locus into 500 bps on right and left
off_target_regions <- off_target_regions %>% dplyr::mutate(Locus_start = Locus_pos - 250, Locus_end =  Locus_pos + 250)
detect_indels_in_off_target_regions <- function(varscan_output, off_target_regions){
require(dplyr)
indels_in_off_target_regions_list <- list()
i = 1
for (region in c(1:nrow(off_target_regions))) {
chr_id <- off_target_regions[region, "Locus_chr"]
start <- off_target_regions[region, "Locus_start"]
end <- off_target_regions[region, "Locus_end"]
a <- varscan_output %>% dplyr::filter(chrom == chr_id, position >= start, position <= end)
if(nrow(a) > 0){
## add the primer regions information
a$Locus_chr <- chr_id
a$Locus_start <- start
a$Locus_end <- end
indels_in_off_target_regions_list[[i]] <- a
i = i + 1
}
}
indels_in_off_target_regions_df <- do.call("rbind", indels_in_off_target_regions_list)
indels_in_off_target_regions_df <- left_join(off_target_regions, indels_in_off_target_regions_df)
return(indels_in_off_target_regions_df)
}
H_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_H_indel.csv") %>% as.data.frame()
M_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_M_indel.csv") %>% as.data.frame()
N_somatic_mutations <- fread("D:/research/mike_wgs_cnv/somatic_mutations/annotated_N_indel.csv") %>% as.data.frame()
H_indels_in_off_target_regions <- detect_indels_in_off_target_regions(H_somatic_mutations, off_target_regions)
M_indels_in_off_target_regions <- detect_indels_in_off_target_regions(M_somatic_mutations, off_target_regions)
N_indels_in_off_target_regions <- detect_indels_in_off_target_regions(N_somatic_mutations, off_target_regions)
View(H_indels_in_off_target_regions)
View(N_indels_in_off_target_regions)
source("D:/research/mike_wgs_cnv/scripts/indels_in_off_target_regions.R", echo=TRUE)
N_indels_in_off_target_regions <- detect_indels_in_off_target_regions(N_somatic_mutations, off_target_regions)
View(N_indels_in_off_target_regions)
fwrite(H_indels_in_off_target_regions, "D:/research/mike_wgs_cnv/off_target_regions/H_indels_in_off_target_regions.csv")
fwrite(N_indels_in_off_target_regions, "D:/research/mike_wgs_cnv/off_target_regions/N_indels_in_off_target_regions.csv")
scmarkermat_BTCC <- readRDS("D:/research/TIGER_dataset_immunotherapy/dataset/single_cell/scmarkermat_BTCC.Rds")
scmarkermat_BTCC <- readRDS("D:/research/TIGER_dataset_immunotherapy/dataset/single_cell/scmarkermat_BTCC.Rds")
View(scmarkermat_BTCC)
scdiffmat_undefined <- readRDS("D:/research/TIGER_dataset_immunotherapy/dataset/single_cell/scdiffmat_undefined.Rds")
View(scdiffmat_undefined)
View(scmarkermat_BTCC)
single_cell_file <- fread("D:/research/TIGER_dataset_immunotherapy/dataset/single_cell/GSE120575_Sade_Feldman_melanoma_single_cells_TPM_GEO.txt/GSE120575_Sade_Feldman_melanoma_single_cells_TPM_GEO.txt")
library(data.table)
gene_expression_tpm <- fread("D:\Dropbox/RNA splicing manuscript shared with Arthur/CLL-map Portal/downloaed_dataset/cllmap_rnaseq_counts_full.tsv")
gene_expression_tpm <- fread("D:/Dropbox/RNA splicing manuscript shared with Arthur/CLL-map Portal/downloaed_dataset/cllmap_rnaseq_counts_full.tsv")
View(gene_expression_tpm)
gene_expression_tpm <- fread("D:/Dropbox/RNA splicing manuscript shared with Arthur/CLL-map Portal/downloaed_dataset/cllmap_rnaseq_tpms_full/")
gene_expression_tpm <- fread("D:/Dropbox/RNA splicing manuscript shared with Arthur/CLL-map Portal/downloaed_dataset/cllmap_rnaseq_tpms_full.tsv")
View(gene_expression_tpm)
## Load packakges
library(data.table)
library(dplyr)
## Read the tsv file
mutation_data <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/icomut_data.20220413.tsv"))
mutation_data <- mutation_data[!mutation_data$Samples=="all_q", ]
SF3B1_patient_info <- mutation_data %>% dplyr::select(Samples, SMG_mutsig_SF3B1)
View(SF3B1_patient_info)
## SF3B1 Patient mutation Info
SF3B1_patient_info$SMG_mutsig_SF3B1 <- as.numeric(SF3B1_patient_info$SMG_mutsig_SF3B1 > 0)
SF3B1_patient_info
gene_expression <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/Downloaded_dataset_from_website/cllmap_rnaseq_tpms_full.tsv"))
## Y chromosomes
signature_Y_chromosome_genes <- c("DAZ1", "DAZ2", "DAZ3", "DAZ4", "DDX3Y",
"EIF1AY", "HSFY2", "KDM5D", "NLGN4Y",
"PCDH11Y", "PRY2", "RBMY1A1", "TBL1Y",
"TMSB4Y", "USP9Y", "UTY", "ZFY")
## Y chromosomes
signature_Y_chromosome_genes <- c("DAZ1", "DAZ2", "DAZ3", "DAZ4", "DDX3Y",
"EIF1AY", "HSFY2", "KDM5D", "NLGN4Y",
"PCDH11Y", "PRY2", "RBMY1A1", "RPS4Y1", "TBL1Y",
"TMSB4Y", "USP9Y", "UTY", "ZFY")
View(mutation_data)
View(gene_expression)
## signature Y chromosome genes expression
signature_Y_chromosome_genes <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes)
## Y chromosomes
signature_Y_chromosome_genes <- c("DAZ1", "DAZ2", "DAZ3", "DAZ4", "DDX3Y",
"EIF1AY", "HSFY2", "KDM5D", "NLGN4Y",
"PCDH11Y", "PRY2", "RBMY1A1", "RPS4Y1", "TBL1Y",
"TMSB4Y", "USP9Y", "UTY", "ZFY")
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes)
View(SF3B1_patient_info)
View(signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -1])
View(t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -c(1, 2)])
View(t_signature_Y_chromosome_genes_expression)
colnames(t_signature_Y_chromosome_genes_expression) <- gene_expression$Description
colnames(t_signature_Y_chromosome_genes_expression) <- signature_Y_chromosome_genes_expression$Description
View(signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
SF3B1_patient_info
t_signature_Y_chromosome_genes_expression
library(tibble)
t_signature_Y_chromosome_genes_expression
SF3B1_patient_info
t_signature_Y_chromosome_genes_expression <- t_signature_Y_chromosome_genes_expression %>% tibble::rownames_to_column(var = "Samples")
t_signature_Y_chromosome_genes_expression <- t_signature_Y_chromosome_genes_expression %>% as.data.frame() %>% tibble::rownames_to_column(var = "Samples")
View(t_signature_Y_chromosome_genes_expression)
## merge SF3B1 mutation
t_signature_Y_chromosome_genes_expression <- left_join(SF3B1_patient_info, t_signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- na.omit(t_signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression[, -1], id.var = "SMG_mutsig_SF3B1")
View(melted_t_signature_Y_chromosome_genes_expression)
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression, id.var = c("Sample", "SMG_mutsig_SF3B1"))
t_signature_Y_chromosome_genes_expression <- na.omit(t_signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression, id.var = c("Samples", "SMG_mutsig_SF3B1"))
View(melted_t_signature_Y_chromosome_genes_expression)
melted_t_signature_Y_chromosome_genes_expression <- melted_t_signature_Y_chromosome_genes_expression %>% dplyr::mutate(SMG_mutsig_SF3B1 = ifelse(SMG_mutsig_SF3B1 == 1, "Mut", "WT"))
View(melted_t_signature_Y_chromosome_genes_expression)
library(ggpubr)
library(ggplot2)
library(rstatix)
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
fill = "#00AFBB",
facet.by = "variable"
)
bxp
stat.test <- stat.test %>% add_xy_position(x = "SMG_mutsig_SF3B1")
stat.test <- melted_t_signature_Y_chromosome_genes_expression %>%
group_by(variable) %>%
t_test(value ~ SMG_mutsig_SF3B1) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
stat.test
stat.test <- stat.test %>% add_xy_position(x = "SMG_mutsig_SF3B1")
stat.test <- melted_t_signature_Y_chromosome_genes_expression %>%
group_by(variable) %>%
t_test(value ~ SMG_mutsig_SF3B1) %>%
add_significance()
stat.test
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
fill = "#00AFBB",
facet.by = "variable"
)
stat.test <- stat.test %>% add_xy_position(x = "SMG_mutsig_SF3B1")
bxp +
stat_pvalue_manual(
stat.test, bracket.nudge.y = -2, hide.ns = TRUE,
label = "{p.adj}{p.adj.signif}"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.1)))
bxp +
stat_pvalue_manual(
stat.test, bracket.nudge.y = -2, hide.ns = TRUE,
label = "{p}"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.1)))
bxp +
stat_pvalue_manual(
stat.test, bracket.nudge.y = -2, hide.ns = TRUE,
label = "{p}"
)
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
fill = "#00AFBB",
facet.by = "variable"
) + stat_compare_means()
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
fill = "#00AFBB",
facet.by = "variable",
scales="free"
) + stat_compare_means()
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
fill = c("#41BEBE", "#BE4141"),
facet.by = "variable",
scales="free"
) + stat_compare_means()
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free"
) + stat_compare_means()
bxp
library(biomaRt)
mart <- useMart(biomart="ensembl", dataset="hsapiens_gene_ensembl")
results <- getBM(attributes = c("chromosome_name", "entrezgene", "hgnc_symbol"),
filters = "chromosome_name", values = "Y", mart = mart)
results <- getBM(attributes = c("chromosome_name", "entrezgene", "hgnc_symbol"),
filters = "chromosome_name", values = "Y", mart = mart)
results <- getBM(attributes = c("chromosome_name", "hgnc_symbol"),
filters = "chromosome_name", values = "Y", mart = mart)
results
genes_on_Y_chromosome <- getBM(attributes = c("chromosome_name", "hgnc_symbol"), filters = "chromosome_name", values = "Y", mart = mart)
genes_on_Y_chromosome
genes_on_Y_chromosome <- getBM(attributes = c("chromosome_name", "hgnc_symbol"), filters = "chromosome_name", values = "Y", mart = mart)
genes_on_Y_chromosome
Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% genes_on_Y_chromosome$hgnc_symbol)
Y_chromosome_genes_expression
View(Y_chromosome_genes_expression)
##
read_the_clinical_outcome <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/CLL_map_clinical_data/clinical_outcomes.csv"))
read_the_clinical_outcome <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/CLL_map_clinical_data/clinical_outcomes.csv"))
clinical_outcome <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/CLL_map_clinical_data/clinical_outcomes.csv"))
View(clinical_outcome)
## Filter the male samples
male_samples <- clinical_outcome %>% dplyr::filter(gender == "male")
View(male_samples)
## Filter the male samples
male_samples <- clinical_outcome %>% dplyr::filter(gender == "male") %>% dplyr::select(participant_id)
clinical_outcome <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/CLL_map_clinical_data/clinical_outcomes.csv"))
## Filter the male samples
male_samples <- clinical_outcome %>% dplyr::filter(gender == "male") %>% dplyr::select(participant_id)
male_samples
male_samples <- male_samples$participant_id
male_samples
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(male_samples)
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(anyof(male_samples))
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(all_of(male_samples))
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(any_of(male_samples))
signature_Y_chromosome_genes_expression
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -c(1, 2)])
colnames(t_signature_Y_chromosome_genes_expression) <- signature_Y_chromosome_genes_expression$Description
t_signature_Y_chromosome_genes_expression <- t_signature_Y_chromosome_genes_expression %>% as.data.frame() %>% tibble::rownames_to_column(var = "Samples")
## merge SF3B1 mutation
t_signature_Y_chromosome_genes_expression <- left_join(SF3B1_patient_info, t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- na.omit(t_signature_Y_chromosome_genes_expression)
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression, id.var = c("Samples", "SMG_mutsig_SF3B1"))
melted_t_signature_Y_chromosome_genes_expression <- melted_t_signature_Y_chromosome_genes_expression %>% dplyr::mutate(SMG_mutsig_SF3B1 = ifelse(SMG_mutsig_SF3B1 == 1, "Mut", "WT"))
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free"
) + stat_compare_means()
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free"
) + stat_compare_means(method = "t.test")
bxp
signature_Y_chromosome_genes <- c("DAZ1", "DAZ2", "DAZ3", "DAZ4", "DDX3Y",
"EIF1AY", "HSFY2", "KDM5D", "NLGN4Y",
"PCDH11Y", "PRY2", "RBMY1A1", "RPS4Y1", "TBL1Y",
"TMSB4Y", "USP9Y", "UTY", "ZFY")
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(any_of(male_samples))
signature_Y_chromosome_genes_expression
gene_expression
View(gene_expression)
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(any_of(c("Description", male_samples)))
View(signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -1])
View(t_signature_Y_chromosome_genes_expression)
View(signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -1])
View(t_signature_Y_chromosome_genes_expression)
colnames(t_signature_Y_chromosome_genes_expression) <- signature_Y_chromosome_genes_expression$Description
t_signature_Y_chromosome_genes_expression <- t_signature_Y_chromosome_genes_expression %>% as.data.frame() %>% tibble::rownames_to_column(var = "Samples")
View(t_signature_Y_chromosome_genes_expression)
## merge SF3B1 mutation
t_signature_Y_chromosome_genes_expression <- left_join(SF3B1_patient_info, t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- na.omit(t_signature_Y_chromosome_genes_expression)
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression, id.var = c("Samples", "SMG_mutsig_SF3B1"))
melted_t_signature_Y_chromosome_genes_expression <- melted_t_signature_Y_chromosome_genes_expression %>% dplyr::mutate(SMG_mutsig_SF3B1 = ifelse(SMG_mutsig_SF3B1 == 1, "Mut", "WT"))
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free"
) + stat_compare_means(method = "t.test")
View(bxp)
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free",
nrow = 3,
) + stat_compare_means(method = "t.test")
bxp
Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% genes_on_Y_chromosome$hgnc_symbol) %>% dplyr::select(any_of(c("Description", male_samples)))
View(Y_chromosome_genes_expression)
Y_chromosome_genes_expression <- Y_chromosome_genes_expression %>% tibble::rownames_to_column(.data, var = "Description")
Y_chromosome_genes_expression <- Y_chromosome_genes_expression %>% tibble::rownames_to_column(var = "Description")
Y_chromosome_genes_expression <- Y_chromosome_genes_expression %>% tibble::rownames_to_column(var = "Description")
Y_chromosome_genes_expression <- unique(Y_chromosome_genes_expression)
Y_chromosome_genes_expression <- Y_chromosome_genes_expression %>% tibble::rownames_to_column(var = "Description")
## Remove duplicates based on Sepal.Width columns
Y_chromosome_genes_expression <- Y_chromosome_genes_expression[!duplicated(Y_chromosome_genes_expression$Description), ]
Y_chromosome_genes_expression <- Y_chromosome_genes_expression %>% tibble::rownames_to_column(var = "Description")
rownames(Y_chromosome_genes_expression) <- Y_chromosome_genes_expression$Description
Y_chromosome_genes_expression <- Y_chromosome_genes_expression[, -1]
View(Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression
SF3B1_patient_info
## Make the differential expression analysis
coldata <- SF3B1_patient_info %>% dplyr::mutate(SF3B1 = ifelse(SMG_mutsig_SF3B1 == 1, "Mut", "WT"))
coldata
rownames(coldata) <- coldata$Samples
coldata
Y_chromosome_genes_expression
coldata <- coldata[colnames(Y_chromosome_genes_expression), ]
coldata
View(Y_chromosome_genes_expression)
sum(is.na(colnames(Y_chromosome_genes_expression)))
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free",
nrow = 3, palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free",
nrow = 3, fill = "SMG_mutsig_SF3B1", palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free", add = "jitter",
nrow = 3, fill = "SMG_mutsig_SF3B1", palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
bxp
View(t_signature_Y_chromosome_genes_expression)
library(data.table)
library(dplyr)
library(tibble)
library(ggpubr)
library(ggplot2)
library(reshape2)
library(biomaRt)
clinical_outcome <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/CLL_map_clinical_data/clinical_outcomes.csv"))
## Filter the male samples
male_samples <- clinical_outcome %>% dplyr::filter(gender == "male") %>% dplyr::select(participant_id)
male_samples <- male_samples$participant_id
## Read the tsv file
mutation_data <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/icomut_data.20220413.tsv"))
mutation_data <- mutation_data[!mutation_data$Samples=="all_q", ]
SF3B1_patient_info <- mutation_data %>% dplyr::select(Samples, SMG_mutsig_SF3B1)
## SF3B1 Patient mutation Info
SF3B1_patient_info$SMG_mutsig_SF3B1 <- as.numeric(SF3B1_patient_info$SMG_mutsig_SF3B1 > 0)
gene_expression <- as.data.frame(fread("D:/research/CLL-map_Portal/Data/Downloaded_dataset_from_website/cllmap_rnaseq_tpms_full.tsv"))
signature_Y_chromosome_genes <- c("DAZ1", "DAZ2", "DAZ3", "DAZ4", "DDX3Y",
"EIF1AY", "HSFY2", "KDM5D", "NLGN4Y",
"PCDH11Y", "PRY2", "RBMY1A1", "RPS4Y1", "TBL1Y",
"TMSB4Y", "USP9Y", "UTY", "ZFY")
## signature Y chromosome genes expression
signature_Y_chromosome_genes_expression <- gene_expression %>% dplyr::filter(Description %in% signature_Y_chromosome_genes) %>% dplyr::select(any_of(c("Description", male_samples)))
t_signature_Y_chromosome_genes_expression <- t(signature_Y_chromosome_genes_expression[, -1])
colnames(t_signature_Y_chromosome_genes_expression) <- signature_Y_chromosome_genes_expression$Description
t_signature_Y_chromosome_genes_expression <- t_signature_Y_chromosome_genes_expression %>% as.data.frame() %>% tibble::rownames_to_column(var = "Samples")
## merge SF3B1 mutation
t_signature_Y_chromosome_genes_expression <- left_join(SF3B1_patient_info, t_signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
t_signature_Y_chromosome_genes_expression <- na.omit(t_signature_Y_chromosome_genes_expression)
View(t_signature_Y_chromosome_genes_expression)
fwrite(t_signature_Y_chromosome_genes_expression, "D:/research/mike_wgs_cnv/tables/Y_chromsomes_signature_genes_expression_tpm.csv")
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free", add = "jitter",
nrow = 3, fill = "SMG_mutsig_SF3B1", palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
melted_t_signature_Y_chromosome_genes_expression <- reshape2::melt(t_signature_Y_chromosome_genes_expression, id.var = c("Samples", "SMG_mutsig_SF3B1"))
melted_t_signature_Y_chromosome_genes_expression <- melted_t_signature_Y_chromosome_genes_expression %>% dplyr::mutate(SMG_mutsig_SF3B1 = ifelse(SMG_mutsig_SF3B1 == 1, "Mut", "WT"))
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free", add = "jitter",
nrow = 3, fill = "SMG_mutsig_SF3B1", palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
bxp
bxp <- ggboxplot(
melted_t_signature_Y_chromosome_genes_expression,
x = "SMG_mutsig_SF3B1",
y = "value",
facet.by = "variable",
scales="free",
nrow = 3, fill = "SMG_mutsig_SF3B1", palette = c("#00AFBB", "#FC4E07"),
) + stat_compare_means(method = "t.test")
ggsave("D:/research/mike_wgs_cnv/figures//Y_chromsomes_signature_genes_expression_boxplot.pdf",
width = 8,
height = 6)
ggsave("D:/research/mike_wgs_cnv/figures//Y_chromsomes_signature_genes_expression_boxplot.pdf",
width = 8,
height = 11)
ggsave("D:/research/mike_wgs_cnv/figures//Y_chromsomes_signature_genes_expression_boxplot.pdf",
width = 16,
height = 11)
setwd("D:/research/sperm_project/sperm_co_book/")
each_sperm_each_chr_CO_table <- readRDS("dataset/CO_table/each_sperm_each_chr_CO_table.rds")
# Create a basic bar chart for one group
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
geom_bar(stat = "identity")
crossover_count <- each_sperm_each_chr_CO_table %>%
group_by(Type, chromosome_CO_count) %>%
summarise(freq = n()) %>% group_by(Type) %>%
mutate(total_count_in_group = sum(freq), percentage = round(freq/total_count_in_group, 4))
# Create a basic bar chart for one group
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
geom_bar(stat = "identity")
population_pyramid <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
population_pyramid
