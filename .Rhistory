1+1
library(data.table)
install.packages("data.table")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery")
library(data.table)
a <- fread("D:/research/eye_diseases/datasets/bulkRNAseq_counts.csv.gz")
View(a)
b <- fread("D:/research/eye_diseases/datasets/bulkRNAseq_sample_metadata.csv.gz")
View(b)
## Load R tables
#------------------------------------------------------
library(data.table)
## Read Files
#------------------------------------------------------
GENIE_CNV <- fread("E:/Dropbox/research/GENIE_dataset/GENIE_v15/data_CNA.txt")
View(GENIE_CNV)
test <- GENIE_CNV %>% filter(Hugo_Symbol == "ZNRF3")
(1/4)^7*500000
(1/4)^8*500000
install.packages("rmarkdown")
each_sperm_each_chr_CO_table <- readRDS("dataset/CO_table/each_sperm_each_chr_CO_table.rds")
setwd('E:/sperm_co_book/')
each_sperm_each_chr_CO_table <- readRDS("dataset/CO_table/each_sperm_each_chr_CO_table.rds")
ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)
fill = NA         # No fill inside the border
)) + stat_compare_means(method = "wilcox.test", paired = FALSE,
label.y = 7,
label.x = 1.5,
aes(label = paste0("Pvalue = ", after_stat(p.format))))
library(ggplot2)
install.packages("ggplot2")
ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)
fill = NA         # No fill inside the border
)) + stat_compare_means(method = "wilcox.test", paired = FALSE,
label.y = 7,
label.x = 1.5,
aes(label = paste0("Pvalue = ", after_stat(p.format))))
library(ggplot2)
ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)
fill = NA         # No fill inside the border
)) + stat_compare_means(method = "wilcox.test", paired = FALSE,
label.y = 7,
label.x = 1.5,
aes(label = paste0("Pvalue = ", after_stat(p.format))))
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)
fill = NA         # No fill inside the border
)) + stat_compare_means(method = "wilcox.test", paired = FALSE,
label.y = 7,
label.x = 1.5,
aes(label = paste0("Pvalue = ", after_stat(p.format))))
fill = NA         # No fill inside the border
ggplot(each_sperm_each_chr_CO_table, aes(x = Type, y = chromosome_CO_count, colour = Type)) +
geom_violin(trim= FALSE) +
geom_jitter(aes(colour = Type), size = 0.5, width = 0.2, height = 0.4, alpha = 0.8) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
ylim(c(0,10)) +
scale_y_continuous(breaks = seq(0, 10, by = 1)) +  # Set custom y-axis tick values
labs(x = "", y = "Count") +  # Update axis labels
theme_minimal() +  # Use a minimal theme for cleaner appearance
theme(
panel.grid.major.y = element_line(color = "gray", linewidth = 0.2),
text = element_text(size = 12, color = "black"),
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"),
panel.border = element_rect(
color = "black",  # Border color
size = 1,         # Border size (adjust as needed)
fill = NA         # No fill inside the border
)) + stat_compare_means(method = "wilcox.test", paired = FALSE,
label.y = 7,
label.x = 1.5,
aes(label = paste0("Pvalue = ", after_stat(p.format))))
crossover_count <- each_sperm_each_chr_CO_table %>%
group_by(Type, chromosome_CO_count) %>%
summarise(freq = n()) %>% group_by(Type) %>%
mutate(total_count_in_group = sum(freq), percentage = round(freq/total_count_in_group, 4))
library(dplyr)
crossover_count <- each_sperm_each_chr_CO_table %>%
group_by(Type, chromosome_CO_count) %>%
summarise(freq = n()) %>% group_by(Type) %>%
mutate(total_count_in_group = sum(freq), percentage = round(freq/total_count_in_group, 4))
ggplot(crossover_count, aes(Type, chromosome_CO_count, fill= percentage)) +
geom_tile(colour = "black") +
scale_fill_gradient(low = "white", high = "#E51A6F") +
geom_text(aes(label = percentage)) +
theme_classic() +  # Use a minimal theme for cleaner appearance
theme(
legend.position="none",
axis.text.x = element_text(color = "black"),  # X-axis text color
axis.text.y = element_text(color = "black"))
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
geom_bar(stat = "identity")
population_pyramid <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
population_pyramid
basic_plot
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity")
population_pyramid <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
population_pyramid
basic_plot
ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_color_manual(values = c("coral", "cornflowerblue"))
+
geom_bar(stat = "identity")
ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_color_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity")
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity")
basic_plot
population_pyramid <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
CO_pyramid_plot <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
CO_pyramid_plot
ggsave(paste0("Figures/CO_stats/CO_pyramid_plot.pdf"), width = 4, height = 4)
chromosome_CO_count
crossover_count
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity") +
geom_text(aes(label = percentage)
basic_plot
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity") +
geom_text(aes(label = percentage)
)
basic_plot
CO_pyramid_plot <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
CO_pyramid_plot
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity") +
geom_text(aes(label = percentage), vjust=1)
basic_plot
CO_pyramid_plot <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
CO_pyramid_plot
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity") +
geom_text(aes(label = percentage), vjust = 2)
CO_pyramid_plot <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
ggsave(paste0("Figures/CO_stats/CO_pyramid_plot.pdf"), width = 4, height = 4)
ggsave(paste0("Figures/CO_stats/CO_pyramid_plot.pdf"), width = 4, height = 4)
basic_plot <-  ggplot(
crossover_count,
aes(
x = chromosome_CO_count,
fill = Type,
y = ifelse(
test = Type == "AS",
yes = -percentage,
no = percentage
)
)
) +
scale_fill_manual(values = c("coral", "cornflowerblue")) +
geom_bar(stat = "identity") +
geom_text(aes(label = percentage), vjust = 0)
CO_pyramid_plot <- basic_plot +
scale_y_continuous(
labels = abs,
limits = max(crossover_count$percentage) * c(-1,1)
) +
coord_flip() +
theme_minimal() +
labs(
x = "Number of CO",
y = "Percentage",
fill = "Group",
title = ""
)
ggsave(paste0("Figures/CO_stats/CO_pyramid_plot.pdf"), width = 4, height = 4)
